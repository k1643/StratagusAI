
\documentclass{article}
\usepackage{amsmath}
\usepackage[pdftex]{graphicx}
\usepackage{verbatim}
\usepackage[table]{xcolor}
\usepackage{pgfplots} % for tikzpicture plotting environment.
\usetikzlibrary{patterns} % for barchart bar patterns
\usepackage[margin=2 cm]{geometry}

\title{Planner Results}
\date{February 6, 2012}
\author{Brian King}

\begin{document}
\maketitle

\section{Strategies}

Switching planners work by simulating games between players who use strategies from a given strategy set.  
The simulated games produce a matrix of player vs.~opponent game values which can be treated as a strategic form game.
Using a criteria such as Nash equilibrium or maximin, the switching planner selects a strategy, generates a plan
from the strategy, and returns the plan to the controller.  The strategy set used for the switching players is
named ``2012-02-05'', and its parameters are given in table \ref{strategy_defs_2012-02-05}.

% generated by SwitchingPlanner.java.  Called in kingbria/stratctrl/sim-matrix.bat.
%\input{sw_strategies_2012-02-05}
% table written on 2012-02-07 by analyze.py
\begin{table}[!ht]
\centering
\begin{tabular}{l |  r  r  r  | r  r  r }
 & \multicolumn{3}{c}{Goal Priority} & \multicolumn{3}{c}{Units Per Goal}\cr
 & base & enemy & chkpt. & base & enemy & chkpt.\cr
\hline
0. balanced 7 & 1 & 3 & 2 & 7 & 7 & 7 \cr
1. balanced 7 mass & 1 & 3 & 2 & 7 & 7 & 7 \cr
2. balanced 9 & 1 & 3 & 2 & 9 & 9 & 9 \cr
3. balanced 9 mass & 1 & 3 & 2 & 9 & 9 & 9 \cr
4. rush 7 & 1 & 3 & 2 & 5 & 7 & 3 \cr
5. rush 7 mass & 1 & 3 & 2 & 5 & 7 & 3 \cr
6. rush 9 & 1 & 3 & 2 & 7 & 9 & 4 \cr
7. offensive 5 mass & 0 & 1 & 0 & 0 & 5 & 0 \cr
8. offensive 7 mass & 0 & 1 & 0 & 0 & 7 & 0 \cr
9. chokepoint 6 & 2 & 1 & 3 & 6 & 6 & 6 \cr
\end{tabular}
\caption{Strategy Set 2012-02-05 Definition.}
\label{strategy_defs_2012-02-05}
\end{table}

A goal is a type of region to attack or secure.  The goal types are ``base'', ``enemy'', and ``chokepoint''.  The plan generator creates tasks so that 
the higher priority goals are pursued first.  A priority zero goal is ignored.  The ``Units Per Goal'' parameter specifies the size of the group that the
controller should produce and send to the goal region.

\section{Results}

The following results were obtained by running fixed strategy planners and switching planners in simulation and in the Stratagus engine.  The
strategy set was ``2012-02-05'' defined in table  \ref{strategy_defs_2012-02-05}.

\subsection{Summary}

The main conclusions we can draw from the results are
\begin{itemize}
\item Simulation is faithful to engine play.
\item Switching planners outperform fixed strategies, except the three strongest.
\item Switching planners are effective players.
\item Switching planners achieve maximin game value in simulation.
\end{itemize}

\subsubsection{Simulation is faithful to engine play} Simulations must be accurate to some degree to be useful for strategy switching.  Figure \ref{compare_sim_engine} compares points
achieved by strategies in simulation and in the engine, and shows that the simulations are accurate enough to predict wins or losses, and
to closely predict game scores.
% compare avg. score of fixed strategies in simulation and in Stratagus engine.
\input{compare_sim_engine}

\subsubsection{Switching planners outperform fixed strategies, except the three strongest.} 
\label{sec:outperform} Tables \ref{sw_vs_strat_sim_points} and \ref{sw_scores} show the final scores achieved by the switching planners vs.~fixed strategy
planners.  Scores in simulation are averages across four maps, scores in the engine games are averages across seven games played on four maps each.
The tables show that the switching planners consistently outperform fixed strategies in simulation, and outperform the strategies in engine play, except for
``balanced\_9'', ``balanced\_9\_mass'', and ``rush\_9''.

\input{sw_vs_strat_sim_points}
\input{sw_scores}

The reason that the switching planners cannot win consistently against ``balanced\_9'', ``balanced\_9\_mass'', and ``rush\_9'' is that there is no
counter-strategy in simulation on specific maps. 
The strategy vs.~strategy simulation matrices shown in tables \ref{sim_scores_2bases-game} and \ref{sim_scores_2bases-switched} show
that no strategy is expected to beat ``rush\_9'' on the ``2bases'' map, and tables
\ref{sim_scores_the-right-strategy-game} and \ref{sim_scores_the-right-strategy-game-switched} show that
no strategy is expected to beat ``balanced\_9\_mass'' or ``balanced\_9'' on ``the-right-strategy'' map.  In contrast, playing fixed strategies in
the engine shows that these strategies can be beaten, as shown in tables 
\ref{engine_scores_2bases},
\ref{engine_scores_2bases_switched},
\ref{engine_scores_the-right-strategy}, and
\ref{engine_scores_the-right-strategy_switched}.
In this case, the simulation is inaccurate enough that it prevents the switching planner from choosing an available counter-strategy.

\subsubsection{Switching planners are effective players.}

Table \ref{sw_vs_sw_win_rate} shows the win rate as a percentage game played for the coluimn switching planning against the row player.  
For example, column 1 shows that the Nash planner wins 82\% of the games played against the Stratagus built-in script.
The lowest win rate for a switching player against the built-in script is 79\%.

\input{sw_vs_sw_win_rate}

\subsubsection{Switching planners achieve maximin game value in simulation.}  The maximim value of a game matrix is the minimum 
value that a player can expect when playing the associated strategy.  If the switching planners are effective, they should do no worse that
the minimax value.  Table \ref{sim_maximin} shows the average maximim value of fixed strategies over the maps, and the minimum average
value achieved by the switching player, which shows that the switching player exceeds the maximin floor in simulation.

\input{sim_maximin_2012-02-05}

However, as shown in table \ref{engine_maximin}, when the switching planners play in the Stratagus engine they do not achieve the maximin
value determined by the fixed strategies.  In part this may be due to the inability to select a counter-strategy to the strongest strategies, as 
discussed in section~\ref{sec:outperform}.

\input{engine_maximin_2012-02-05}

Table \ref{engine_maximin_unbiased} shows the minimums of game averages when with average bias on the map subtracted.

\input{engine_maximin_2012-02-05_unbiased}

Another factor preventing the planner from achieving the maximim value is an asymmetric advantage on the ``2bases'' map.  The chokepoint on the ``2bases'' map gives an advantage to the player starting from the bottom position on the map (\emph{need data to show this}), so players don't start equally matched.

\clearpage

\subsection{Simulated Games}

% WriteSimMatrix.java
%\input{sim_win_rate_2012-02-05}      %  WriteSimMatrix.java -> sim_win_rate.yaml -> sim_win_rate.tex

The following tables show the scores of the fixed strategy column players against fixed strategy row players.  Table \ref{sim_scores} shows average value over
the four maps, and tables \ref{sim_scores_2bases-game},\ref{sim_scores_2bases-switched}, \ref{sim_scores_the-right-strategy-game},
and \ref{sim_scores_the-right-strategy-game-switched} show the simulation results for specific maps.

\input{sim_scores_2012-02-05}          %  WriteSimMatrix.java -> sim_scores.yaml -> sim_scores.tex
\input{sim_scores_2012-02-05_2bases-game}
\input{sim_scores_2012-02-05_2bases_switched}
\input{sim_scores_2012-02-05_the-right-strategy-game}
\input{sim_scores_2012-02-05_the-right-strategy-game_switched}

% SwitchingPlannerSimulation.java
%\input{sw_vs_strat_sim_points}
\input{sw_vs_strat_sim_points_2bases_switched}
\input{sw_vs_strat_sim_points_2bases-game}
\input{sw_vs_strat_sim_points_the-right-strategy-game}
\input{sw_vs_strat_sim_points_the-right-strategy-game_switched}

\clearpage

\subsection{Stratagus Engine Games}

\input{strategy_win_rate}
%\input{sw_vs_sw_win_rate}             % eval_planners.py -> *.csv -> sw_vs_sw_win_rate.tex
\input{engine_scores}
\input{engine_scores_2bases}
\input{engine_scores_2bases_switched}
\input{engine_scores_the-right-strategy}
\input{engine_scores_the-right-strategy_switched}

\clearpage

% swithcing planner vs. fixed strategies
\input{sw_win_rate}              % eval_planners.py -> *.csv -> sw_win_rate.tex
%\input{sw_scores}

\input {sw_scores_2bases}
\input {sw_scores_2bases_switched}
\input {sw_scores_the-right-strategy}
\input {sw_scores_the-right-strategy_switched}

\clearpage

\subsubsection{Strategy Choices}
\input{switcher_choices}
%\input{switcher_win_choices}
\input{switcher_choices_2bases}
\input{switcher_choices_2bases_switched}
\input{switcher_choices_the-right-strategy}
\input{switcher_choices_the-right-strategy_switched}

\clearpage

Game Matrices generated by switching planner in one run of maximin against fixed rush\_9 in engine.

\input{maximin_rush_9_2bases_matrices_0}
\input{maximin_rush_9_2bases_matrices_6030}
\input{maximin_rush_9_2bases_matrices_12060}
\input{maximin_rush_9_2bases_matrices_18090}
\input{maximin_rush_9_2bases_matrices_24120}

\input{maximin_rush_9_2bases_switched_matrices_0}
\input{maximin_rush_9_2bases_switched_matrices_6030}
\input{maximin_rush_9_2bases_switched_matrices_12060}
\input{maximin_rush_9_2bases_switched_matrices_18090}

\clearpage

\subsection{Time Charts}

%\input{game_duration_barchart}

% generated barcharts for ['balanced_7_mass','balanced_9','balanced_9_mass','rush_9']:
\input{Nash_choices_vs_balanced_9_barchart}
\input{Nash_choices_vs_balanced_9_mass_barchart}
\input{Nash_choices_vs_rush_9_barchart}
\input{Nash_choices_vs_built-in_barchart}
%\input{Nash_choices_vs_balanced_9_barchart_replan_2bases}
%\input{Nash_choices_vs_balanced_9_mass_barchart_replan_2bases}
%\input{Nash_choices_vs_balanced_9_barchart_replan_2bases_switched}
%\input{Nash_choices_vs_balanced_9_mass_barchart_replan_2bases_switched}
%\input{Nash_choices_vs_balanced_9_barchart_replan_the-right-strategy}
%\input{Nash_choices_vs_balanced_9_mass_barchart_replan_the-right-strategy}
%\input{Nash_choices_vs_balanced_9_barchart_replan_the-right-strategy_switched}
%\input{Nash_choices_vs_balanced_9_mass_barchart_replan_the-right-strategy_switched}

\input{maximin_choices_vs_balanced_9_barchart}
\input{maximin_choices_vs_balanced_9_mass_barchart}
\input{maximin_choices_vs_rush_9_barchart}
\input{maximin_choices_vs_built-in_barchart}

%\input{maximin_choices_vs_balanced_9_barchart_replan}
%\input{maximin_choices_vs_balanced_7_mass_barchart}
%maximin_choices_vs_balanced_9_barchart}
%\input{maximin_choices_vs_balanced_9__barchart}

%\input{maximin_choices_vs_built-in_barchart_replan}
%\input{maximin-mod_choices_vs_built-in_barchart_replan}

%\clearpage
%\subsection*{Game Matrices}

%\input{sim_matrix_2bases-game}
%\input{sim_matrix_2bases_switched}
%\input{sim_matrix_the-right-strategy-game}
%\input{sim_matrix_the-right-strategy-game_switched}

%\input{matrix_history_0}
\clearpage
\input{sim_minus_engine_scores}
\input{sim_minus_engine_scores_2bases}
\input{sim_minus_engine_scores_2bases_switched}
\input{sim_minus_engine_scores_the-right-strategy}
\input{sim_minus_engine_scores_the-right-strategy_switched}

\end{document}